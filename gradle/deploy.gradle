apply plugin: 'maven-publish'
tasks.withType(GenerateModuleMetadata) {
    enabled = false
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java

            // Allows the maven pom file to be modified.
            pom.withXml {
                // Go through all the dependencies.
                asNode().dependencies.dependency.each { dep ->

                    // Check if the dependency has been mapped with MCP
                    if (dep.version.last().value().last().contains('_mapped_snapshot_') || dep.version.last().value().last().contains('_mapped_stable_') || dep.version.last().value().last().contains('_mapped_official_') || dep.version.last().value().last().contains('_mapped_parchment_')) {
                        // Remove the MCP mapped artifact from the dependency list.
                        println 'Surpressing MCP mapped artifact ' + dep.artifactId.last().value().last() + ' from maven dependencies.'
                        assert dep.parent().remove(dep)
                    }
                }
            }

            pom {
                description = 'An Minecraft mod that allows you to become a werewolf'

                scm {
                    url = 'https://github.com/TeamLapen/Werewolves'
                    connection = 'scm:git:git://github.com/TeamLapen/Werewolves.gi'
                    developerConnection = 'scm:git:git@github.com:TeamLapen/Werewolves.git'
                }

                issueManagement {
                    system = 'github'
                    url = 'https://github.com/TeamLapen/Werewolves/issues'
                }
                developers {
                    developer {
                        id = 'cheaterpaul'
                        name = 'cheaterpaul'
                        url = 'paube.de'
                        email = 'dev@paube.de'
                        roles = ["developer"]
                    }
                }

            }

            artifact sourcesJar
            artifact javadocJar

        }
    }

    repositories {
        maven {
            // Sets the login credentials for your maven.
            credentials {
                username findProperty('MAVEN_USER')
                password findProperty('MAVEN_TOKEN')
            }

            // Sets the maven URL
            url findProperty('MAVEN_URL')
        }
    }
}

tasks.register('checkIfPublicVersion') {
    doFirst {
        if (project.classification != "public") {
            throw new PublishException("Trying to publish a version that is not intended for public release")
        }
    }
}

tasks.register('publishAll') {
    dependsOn('build')
    dependsOn('checkIfPublicVersion')
    dependsOn('publish')
    dependsOn('publishMods')
}

tasks.publishMods.dependsOn(checkIfPublicVersion)

publishMods {
    type = project.type == "beta" ? BETA: project.type == "release" ? STABLE : ALPHA
    changelog = !(findProperty("CHANGELOG") ?: "").toString().isEmpty() ? getProperty("CHANGELOG") : type != ALPHA ? "" : "This version should not be used in your 'productive' world. It contains the latest features, but also the latest bugs.\n Probably not all features are finished.\n To see what might have changed browse the latest commits."
    file = jar.archiveFile
    modLoaders.add("neoforge")
    version = "${project.minecraft_version}-${project.mod_version}"
    displayName = "Werewolves-${project.minecraft_version}-${project.mod_version}"
    dryRun = !(project.hasProperty("MODRINTH_API") && project.hasProperty("CURSEFORGE_API"))

    modrinth {
        accessToken = findProperty("MODRINTH_API") ?: "DUMMY"
        projectId = project.modrinth_id
        minecraftVersions.add(project.minecraft_version)
    }

    curseforge {
        accessToken = findProperty("CURSEFORGE_API") ?: "DUMMY"
        projectId = project.curseforge_id
        minecraftVersions.add(project.minecraft_version)
        projectSlug = project.curseforge_slug
    }
}